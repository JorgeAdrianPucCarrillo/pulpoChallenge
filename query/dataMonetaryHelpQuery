const msg = require('../utils/message');
const https = require('https')
class dataMonetaryHelpQuery {
    async dataMonetaryHelp(countryId, year) {
        try{
            // const data = JSON.stringify({}) //elemento oculto preparado para su uso en caso de ser necesario
            // '/datastore/activity/iati?q=description_narrative:NGO&q.op=AND&wt=json&df=title&q.op=AND&sort=score+asc'
            var lessTime = 0
            try{
                lessTime=Number(year)-1
                if (lessTime<0 || lessTime > new Date().getFullYear()){
                    mensaje = msg.msgError(400, 'La fecha debe ser una fecha real', e);
                    return reject(mensaje);
                }
            }catch(e){
                mensaje = msg.msgError(400, 'La fecha debe ser un año numerico', e);
                return reject(mensaje);
            }
            //https://api.iatistandard.org/datastore/activity/select?q=(sector_code:11130%20OR%20transaction_sector_code:11130)%20AND%20(recipient_country_code:(UG%20KE)%20OR%20transaction_recipient_country_code:(UG KE))%20AND%20activity_date_iso_date:[2020-01-01T00:00:00Z%20TO%202021-01-01T00:00:00Z]&fl=participating_org_ref,period_start,activity_date_iso_date&rows=1&sow=false&wt=json
            let uriPath='/datastore/activity/select?q=recipient_country_code:'+countryId+'%20AND%20activity_date_iso_date:['+lessTime+'-01-01T00:00:00Z%20TO%20'+year+'-01-01T00:00:00Z]&rows=5'
            //se decide mantener uriPath como una sola linea de query, con el fin que el usuario pueda modificar lo menos posible este mismo
            const options = {
                hostname: 'api.iatistandard.org',
                port: 443,
                path: uriPath,
                method: 'GET',
                headers: {
                  'Content-Type': 'application/json',
                  'Ocp-Apim-Subscription-Key':'41d86aa7d2cf404198b02d6b016ee632'
                }
            }
            return await new Promise((resolve, reject) => {
                const req = https.request(options, (res) => {
                    let responseBody = '';
        
                    res.on('data', (chunk) => {
                        responseBody += chunk;
                    });
                    res.on('end', () => {
                        resolve(msg.msgSuccess(200,'exito',responseBody)); //convirtiendo respuesta a objeto para distincion de sus elementos y el tipo de respuesta en caso de ser necesario
                    });
                });
        
                req.on('error', (err) => {
                    reject(msg.msgError(502, 'falla en conexion al servidor', err)); //convirtiendo error a objeto para distincion de sus elementos y el tipo de respuesta en caso de ser necesario
                });
            });
        }catch(error){
            console.log(error)
            console.log('fallo-----------------')
            mensaje = msg.msgError(400, 'no se pudo obtener información', error);
            return reject(mensaje);
        }
    }
}
module.exports = new dataMonetaryHelpQuery()